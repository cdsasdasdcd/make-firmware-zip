name: Make-RADIO

on:
  workflow_dispatch:
    inputs:
      URL:
        description: 'URL'
        required: true
        default: ''
        
      payload:
        description: 'is payload？'
        required: true
        default: 'true'
        type: boolean

      images:
        description: 'img'
        required: true
        default: 'abl,aop,bluetooth,cmnlib,cmnlib64,devcfg,dsp,featenabler,hyp,imagefv,keymaster,logo,mdm_oem_stanvbk,modem,multioem,multiimgoem,qupfw,spunvm,storsec,tz,uefisecapp,xbl,xbl_config,xbl_lp5,xbl_config_lp5'
        
        #"apusys,audio_dsp,ccu,dpm,dtbo,gpueb,gz,lk,logo,mcf_ota,mcupm,md1img,mvpu_algo,pi_img,preloader_raw,scp,spmfw,sspm,tee,vbmeta,vcp"#redmi-k50
        
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
          
    - name: 下载
      run: |
        aria2c -x10 -U "netdisk" "${{ github.event.inputs.URL }}" -o aaaa.zip || wget -U "netdisk" "${{ github.event.inputs.URL }}" -o aaaa.zip
        
    - name: 解包~提取(payload)
      if: github.event.inputs.payload == 'true'    
      run: |
        ls
        unzip aaaa.zip                 
        chmod 7777 payload-dumper-go
        ./payload-dumper-go -p "${{ github.event.inputs.images }}" -o zhlhlf/firmware-update payload.bin
        ls zhlhlf/firmware-update

    - name: 解包~提取(color)
      if: github.event.inputs.payload == 'false'
      run: |
        unzip -v "aaaa.zip"
        unzip "aaaa.zip" firmware-update/* -d ./ || echo "压缩包根目录没有firmware-update"
        unzip "aaaa.zip" system_vendor* -d ./ || echo "压缩包根目录没有system_vendor.zip"
        unzip system_vendor* firmware-update/* -d ./ || echo "666" 
        cp -r firmware-update zhlhlf/                            
                         
    - name: 打包上传到wetransfer
      run: |
        ls zhlhlf
        cd zhlhlf
        zip -r fw-oplus9r-$(date +%Y-%m-%d-%H).zip *     
        rm -r 666 || echo 
        mkdir 666
        mv fw-oplus9r-*.zip 666
        wget -q https://raw.github.com/zhlhlf/text/main/onedrive_mount.sh && sh onedrive_mount.sh ${{ secrets.RCK }} 临时存放文件         
    
        
